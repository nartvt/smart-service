// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2/log"
	"github.com/nartvt/go-core/conf"
	"github.com/nartvt/go-core/server"
	"github.com/nartvt/go-core/service"
	"github.com/nartvt/smart-service/internal/biz"
	conf2 "github.com/nartvt/smart-service/internal/conf"
	"github.com/nartvt/smart-service/internal/data"
	service2 "github.com/nartvt/smart-service/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func initApp(confServer *conf.Server, confData *conf2.Data, logger log.Logger) (service.Service, func(), error) {
	grpcServer := server.NewGRPCServer(confServer, logger)
	httpServer := server.NewHTTPServer(confServer, logger)
	dataData, cleanup, err := data.NewData(confData)
	if err != nil {
		return nil, nil, err
	}
	iUserRepo := data.NewUserRepo(dataData)
	userBiz := biz.NewUserBiz(iUserRepo)
	userServiceService := service2.NewUserServiceService(userBiz)
	serviceService := initService(logger, grpcServer, httpServer, userServiceService)
	return serviceService, func() {
		cleanup()
	}, nil
}
